spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  flyway:
    schemas: notification_service
    enabled: true
    locations: classpath:db/migration
  jpa:
    show-sql: false
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
    notification:
      message:
        subject: New notification from business manager
        from: business.manager.test.app@gmail.com
  kafka:
    bootstrap-servers: ${KAFKA_DATASOURCE_URL}
    consumer:
      group-id: ${KAFKA_GROUP_ID}
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

telegram:
  bot:
    token: ${TELEGRAM_BOT_TOKEN}

management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE}
  info:
    env:
      enabled: true

info:
  app:
    name: Business manager - Notification service
    description: A service for sending notifications to any desired channel
    version: 1.1.0
server:
  port: 8082